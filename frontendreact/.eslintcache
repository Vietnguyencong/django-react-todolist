[{"C:\\Users\\Viet Nguyen Cong\\Desktop\\Coding\\django projects\\react-django\\to_do_list\\todo -v2\\frontendreact\\src\\index.js":"1","C:\\Users\\Viet Nguyen Cong\\Desktop\\Coding\\django projects\\react-django\\to_do_list\\todo -v2\\frontendreact\\src\\App.js":"2","C:\\Users\\Viet Nguyen Cong\\Desktop\\Coding\\django projects\\react-django\\to_do_list\\todo -v2\\frontendreact\\src\\reportWebVitals.js":"3"},{"size":472,"mtime":1609444584584,"results":"4","hashOfConfig":"5"},{"size":5609,"mtime":1609447137864,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1608755977263,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"10h4iu3",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\Viet Nguyen Cong\\Desktop\\Coding\\django projects\\react-django\\to_do_list\\todo -v2\\frontendreact\\src\\index.js",[],["16","17"],"C:\\Users\\Viet Nguyen Cong\\Desktop\\Coding\\django projects\\react-django\\to_do_list\\todo -v2\\frontendreact\\src\\App.js",["18"],"import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      todolist:[\n      ],\n      activeItem:{\n        id:null,\n        title:'',\n        completed:false,\n      },\n      editting:false,\n\n      }\n      this.fetchTasks = this.fetchTasks.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n      this.handdleSubmit = this.handdleSubmit.bind(this)\n      this.getCookie = this.getCookie.bind(this)\n      // this.deleteItem = this.deleteItem.bind(this)\n      // this.startEdit = this.startEdit.bind(this)\n  };\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n  componentWillMount(){\n    this.fetchTasks()\n  } \n\n  fetchTasks(){\n    console.log('fetching...')\n    var url = 'http://127.0.0.1:8000/api/task-list/' \n\n    // var wrapper = document.getElementById('list-wrapper')\n    // wrapper.innerHTML = ''\n    fetch(url)\n    .then((res)=>res.json())\n    .then((data) => {\n      console.log(\"data:\", data)\n      this.setState({\n        todolist: data\n      })\n    })            \n            \n            \n  }\n  handleChange(e){\n    // get the id \n    var name = e.target.name\n    // get the value in the form \n    var value =  e.target.value\n    console.log(\"naem:\", name)\n    console.log(\"value:\", value)\n\n    // update the active item when typing \n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n  }\n\n  handdleSubmit(e){\n    e.preventDefault()\n    console.log(\n      \"item\", this.state.activeItem\n    )\n    \n    var token = this.getCookie('csrftoken')\n    var url ='http://127.0.0.1:8000/api/task-create/'\n    if (this.state.editting === true){\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}`\n      this.setState(\n        {\n        editting: false\n        }\n      )\n    }\n    fetch(url,{\n      method:\"POST\",\n      headers: {\n        'Content-type' :'application/json',\n        'X-CSRFToken': token\n      },\n      body:JSON.stringify(this.state.activeItem)\n\n    })\n    .then((res)=>{\n      this.fetchTasks()\n      this.setState({\n        activeItem:{\n          id:null,\n          title:'',\n          completed:false,\n        },\n      })\n    })\n    .catch((error)=>{\n      console.log(\"ERROR:\", error)\n    })\n  }\n\n  startEdit(task){\n    this.setState({\n      activeItem:task,\n      editting:true,\n    })\n\n  }\n  deleteItem(task){\n    var token = this.getCookie('csrftoken')\n    console.log(token)\n    var url = `http://127.0.0.1:8000/api/task-delete/${task.id}`\n    fetch(url, {\n      method:\"DELETE\",\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': token\n      }\n    })\n    .then((res)=>{\n      this.fetchTasks()\n    })\n    .catch((ERROR)=>{\n      console.log(\"error:\", ERROR)\n    })\n  }\n\n  strikeUnstrike(task){\n    var token = this.getCookie('csrftoken')\n    var url = `http://127.0.0.1:8000/api/task-update/${task.id}`\n    fetch(url, {\n      method:\"POST\",\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': token\n      },\n      body:JSON.stringify({'title': task.title, 'completed': !task.completed})\n    })\n    .then((res)=>{\n      this.fetchTasks()\n    })\n    .catch((ERROR)=>{\n      console.log(\"error:\", ERROR)\n    })\n  }\n  render(){\n    var tasks = this.state.todolist\n    var self = this\n    return (\n    <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handdleSubmit} id=\"form\">\n                < div class=\"flex-wrapper\">\n                  <div style={{flex: 6}}>\n                    <input onChange={this.handleChange} id=\"title\" class=\"form-control\" type=\"text\" name=\"title\" placeholder=\"Add task\" value={this.state.activeItem.title}></input>\n                  </div>\n                  <div style={{flex: 1}}>\n                    <input id=\"submit\" class=\"btn\" type=\"submit\" ></input>\n                  </div>\n                </div>\n            </form>\n          </div>\n\n          <div id=\"list-wrapper\">\n            {tasks.map((task, index) => {\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\" >\n                  <div style={{flex:6}} className=\"trike-part\">\n                    {task.completed == false?(\n                      <span key=\"123\" onClick={()=> self.strikeUnstrike(task)}>{task.title}</span>\n                    ):(\n                      <strike key=\"456\" onClick={()=> self.strikeUnstrike(task)}>{task.title}</strike>\n                    )}\n                  </div>\n              \n                  <div style={{flex:1}}>\n                    <button className=\"btn btn-sm btn-outline-info\" onClick={()=>self.startEdit(task)}>Edit</button>\n                  </div>\n                  <div style={{flex:1}}>\n                    <button className=\"btn btn-sm btn-outline-danger\" onClick={()=> self.deleteItem(task)}>Remove</button>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\t\n        </div>\n\n    </div>\n    )\n  }\n}\n\nexport default App;\n","C:\\Users\\Viet Nguyen Cong\\Desktop\\Coding\\django projects\\react-django\\to_do_list\\todo -v2\\frontendreact\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":187,"column":37,"nodeType":"25","messageId":"26","endLine":187,"endColumn":39},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]